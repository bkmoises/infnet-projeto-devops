name: teste_noturno
on:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  teste_noturno:
    runs-on: self-hosted
    steps:
      - name: "Iniciando Job"
        run: echo "Iniciando Job"
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Setup Python"
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: "Instalando DependÃªncias"
        run: |
          python3 -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: "Executando Testes"
        continue-on-error: false
        run: pytest --maxfail=1 --disable-warnings -q
      - name: "Docker login"
        run: echo "${{ secrets.DOCKERHUB_KEY}}" | docker login -u "${{ secrets.DOCKERHUB_LOGIN}}" --password-stdin
      - name: "Build Docker"
        run: |
          docker build . -t "${{ secrets.DOCKERHUB_LOGIN}}/movies-api:latest"
      - name: "Push Docker"
        run: |
          docker push "${{ secrets.DOCKERHUB_LOGIN}}/movies-api:latest"
      - name: "Deploy no Kubernetes"
        run: |
          kubectl rollout restart deploy movies-api -n movies
      - name: "Verificando Deploy"
        run: |
          if ! kubectl rollout status deploy movies-api -n movies --timeout=60s; then
            echo "Deploy falhou. Fazendo rollback..."
            kubectl rollout undo deploy movies-api -n movies
            exit 1
          else
            echo "Deploy realizado com sucesso!"
          fi
